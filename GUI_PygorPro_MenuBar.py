# -*- coding: utf-8 -*- ############################################################################ Python code generated with wxFormBuilder (version Sep 12 2010)# http://www.wxformbuilder.org/## PLEASE DO "NOT" EDIT THIS FILE!###########################################################################import wx############################################################################ Class PygorPro_main_menu###########################################################################class GUI_PygorPro_MenuBar(wx.MenuBar):    def __init__(self):        wx.MenuBar.__init__(self, style=0)        self.project_menu = wx.Menu()        self.new_project_option = wx.MenuItem(self.project_menu, wx.ID_ANY, u"New Project...", wx.EmptyString, wx.ITEM_NORMAL)        self.project_menu.AppendItem(self.new_project_option)        self.open_project_option = wx.MenuItem(self.project_menu, wx.ID_ANY, u"Open...", wx.EmptyString, wx.ITEM_NORMAL)        self.project_menu.AppendItem(self.open_project_option)        self.save_project_option = wx.MenuItem(self.project_menu, wx.ID_ANY, u"Save...", wx.EmptyString, wx.ITEM_NORMAL)        self.project_menu.AppendItem(self.save_project_option)        self.save_as_project_option = wx.MenuItem(self.project_menu, wx.ID_ANY, u"Save As...", wx.EmptyString, wx.ITEM_NORMAL)        self.project_menu.AppendItem(self.save_as_project_option)        self.Append(self.project_menu, u"&Project")         self.dataFrame_menu = wx.Menu()        self.load_dataFrame_menu = wx.Menu()        self.load_csv_file = wx.MenuItem(self.load_dataFrame_menu, wx.ID_ANY, u"Load CSV File...", wx.EmptyString, wx.ITEM_NORMAL)        self.load_dataFrame_menu.AppendItem(self.load_csv_file)        self.load_txt_file = wx.MenuItem(self.load_dataFrame_menu, wx.ID_ANY, u"Load Text File...", wx.EmptyString, wx.ITEM_NORMAL)        self.load_dataFrame_menu.AppendItem(self.load_txt_file)        self.load_h5_file = wx.MenuItem(self.load_dataFrame_menu, wx.ID_ANY, u"Load HDF5 File...", wx.EmptyString, wx.ITEM_NORMAL)        self.load_dataFrame_menu.AppendItem(self.load_h5_file)        self.load_pickled_dataFrame = wx.MenuItem(self.load_dataFrame_menu, wx.ID_ANY, u"Load Pickled DataFrame...", wx.EmptyString, wx.ITEM_NORMAL)        self.load_dataFrame_menu.AppendItem(self.load_pickled_dataFrame)        self.dataFrame_menu.AppendSubMenu(self.load_dataFrame_menu, u"Load DataFrame")        self.dataFrame_menu.AppendSeparator()        self.browse_dataFrames = wx.MenuItem(self.dataFrame_menu, wx.ID_ANY, u"Browse DataFrames...", wx.EmptyString, wx.ITEM_NORMAL)        self.dataFrame_menu.AppendItem(self.browse_dataFrames)        self.dataFrame_menu.AppendSeparator()        self.change_dataSeries_data_type = wx.MenuItem(self.dataFrame_menu, wx.ID_ANY, u"Change Series Type...", wx.EmptyString, wx.ITEM_NORMAL)        self.dataFrame_menu.AppendItem(self.change_dataSeries_data_type)        self.rename_dataSeries = wx.MenuItem(self.dataFrame_menu, wx.ID_ANY, u"Rename Series...", wx.EmptyString, wx.ITEM_NORMAL)        self.dataFrame_menu.AppendItem(self.rename_dataSeries)        self.delete_dataSeries = wx.MenuItem(self.dataFrame_menu, wx.ID_ANY, u"Delete Series...", wx.EmptyString, wx.ITEM_NORMAL)        self.dataFrame_menu.AppendItem(self.delete_dataSeries)        self.dataFrame_menu.AppendSeparator()        self.export_dataFrame = wx.Menu()        self.export_as_csv = wx.MenuItem(self.export_dataFrame, wx.ID_ANY, u"Export CSV...", wx.EmptyString, wx.ITEM_NORMAL)        self.export_dataFrame.AppendItem(self.export_as_csv)        self.export_as_HDF5 = wx.MenuItem(self.export_dataFrame, wx.ID_ANY, u"Export HDF5...", wx.EmptyString, wx.ITEM_NORMAL)        self.export_dataFrame.AppendItem(self.export_as_HDF5)        self.dataFrame_menu.AppendSubMenu(self.export_dataFrame, u"Export DataFrame")        self.pickle_dataFrame = wx.MenuItem(self.dataFrame_menu, wx.ID_ANY, u"Pickle DataFrame...", wx.EmptyString, wx.ITEM_NORMAL)        self.dataFrame_menu.AppendItem(self.pickle_dataFrame)        self.Append(self.dataFrame_menu, u"DataFrame")         self.analysis_menu = wx.Menu()        self.curve_fitting_option = wx.MenuItem(self.analysis_menu, wx.ID_ANY, u"Curve Fitting...", wx.EmptyString, wx.ITEM_NORMAL)        self.analysis_menu.AppendItem(self.curve_fitting_option)        self.quick_fit = wx.Menu()        self.quick_line_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Line", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_line_option)        self.quick_polynominal_option = wx.Menu()        self.quick_poly_2 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"2", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_2)        self.quick_poly_3 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"3", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_3)        self.quick_poly_4 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"4", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_4)        self.quick_poly_5 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"5", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_5)        self.quick_poly_6 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"6", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_6)        self.quick_poly_7 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"7", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_7)        self.quick_poly_8 = wx.MenuItem(self.quick_polynominal_option, wx.ID_ANY, u"8", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_polynominal_option.AppendItem(self.quick_poly_8)        self.quick_fit.AppendSubMenu(self.quick_polynominal_option, u"Polynomial")        self.quick_gaussian_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Gaussian", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_gaussian_option)        self.quick_lorentzen = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Lorentzen", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_lorentzen)        self.quick_exponential_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Exponential", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_exponential_option)        self.quick_sinusoidal_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Sinusoidal", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_sinusoidal_option)        self.quick_sigmoidal_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Sigmoidal", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_sigmoidal_option)        self.quick_power_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Power", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_power_option)        self.quick_lognormal_option = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"LogNormal", wx.EmptyString, wx.ITEM_NORMAL)        self.quick_fit.AppendItem(self.quick_lognormal_option)        self.quick_fit.AppendSeparator()        self.fit_between_points_toggle = wx.MenuItem(self.quick_fit, wx.ID_ANY, u"Fit Between Cursors", wx.EmptyString, wx.ITEM_CHECK)        self.quick_fit.AppendItem(self.fit_between_points_toggle)        self.fit_between_points_toggle.Check(True)        self.analysis_menu.AppendSubMenu(self.quick_fit, u"Quick Fit")        self.analysis_menu.AppendSeparator()        self.statistics_option = wx.Menu()        self.statistics_1D_option = wx.MenuItem(self.statistics_option, wx.ID_ANY, u"1D Statistics Report", wx.EmptyString, wx.ITEM_NORMAL)        self.statistics_option.AppendItem(self.statistics_1D_option)        self.analysis_menu.AppendSubMenu(self.statistics_option, u"Statistics")        self.histogram_option = wx.MenuItem(self.analysis_menu, wx.ID_ANY, u"Histogram...", wx.EmptyString, wx.ITEM_NORMAL)        self.analysis_menu.AppendItem(self.histogram_option)        self.analysis_menu.AppendSeparator()        self.check_data_quality = wx.MenuItem(self.analysis_menu, wx.ID_ANY, u"Check Quality...", wx.EmptyString, wx.ITEM_NORMAL)        self.analysis_menu.AppendItem(self.check_data_quality)        self.Append(self.analysis_menu, u"Analysis")         self.plot_menu = wx.Menu()        self.create_new_2D_plot_option = wx.MenuItem(self.plot_menu, wx.ID_ANY, u"New 2D Plot...", wx.EmptyString, wx.ITEM_NORMAL)        self.plot_menu.AppendItem(self.create_new_2D_plot_option)        self.create_new_3D_plot_option = wx.MenuItem(self.plot_menu, wx.ID_ANY, u"New 3D Plot...", wx.EmptyString, wx.ITEM_NORMAL)        self.plot_menu.AppendItem(self.create_new_3D_plot_option)        self.plot_menu.AppendSeparator()        self.export_graphic = wx.MenuItem(self.plot_menu, wx.ID_ANY, u"Export Plot...", wx.EmptyString, wx.ITEM_NORMAL)        self.plot_menu.AppendItem(self.export_graphic)        self.Append(self.plot_menu, u"Plot")         self.table_menu = wx.Menu()        self.create_table = wx.MenuItem(self.table_menu, wx.ID_ANY, u"New Table...", wx.EmptyString, wx.ITEM_NORMAL)        self.table_menu.AppendItem(self.create_table)        self.append_series_to_table = wx.MenuItem(self.table_menu, wx.ID_ANY, u"Append Series...", wx.EmptyString, wx.ITEM_NORMAL)        self.table_menu.AppendItem(self.append_series_to_table)        self.delete_data_series = wx.MenuItem(self.table_menu, wx.ID_ANY, u"Delete Series...", wx.EmptyString, wx.ITEM_NORMAL)        self.table_menu.AppendItem(self.delete_data_series)        self.table_menu.AppendSeparator()        self.export_table = wx.MenuItem(self.table_menu, wx.ID_ANY, u"Export Table...", wx.EmptyString, wx.ITEM_NORMAL)        self.table_menu.AppendItem(self.export_table)        self.Append(self.table_menu, u"Table")         # Connect Events        self.Bind(wx.EVT_MENU, self.on_new_project, id=self.new_project_option.GetId())        self.Bind(wx.EVT_MENU, self.on_open_project, id=self.open_project_option.GetId())        self.Bind(wx.EVT_MENU, self.on_save_project, id=self.save_project_option.GetId())        self.Bind(wx.EVT_MENU, self.on_save_as_project, id=self.save_as_project_option.GetId())        self.Bind(wx.EVT_MENU, self.on_load_csv, id=self.load_csv_file.GetId())        self.Bind(wx.EVT_MENU, self.on_load_txt, id=self.load_txt_file.GetId())        self.Bind(wx.EVT_MENU, self.on_load_h5, id=self.load_h5_file.GetId())        self.Bind(wx.EVT_MENU, self.on_load_dataFrame, id=self.load_pickled_dataFrame.GetId())        self.Bind(wx.EVT_MENU, self.on_browse_dataFrames, id=self.browse_dataFrames.GetId())        self.Bind(wx.EVT_MENU, self.on_change_dataSeries_type, id=self.change_dataSeries_data_type.GetId())        self.Bind(wx.EVT_MENU, self.on_rename_dataSeries, id=self.rename_dataSeries.GetId())        self.Bind(wx.EVT_MENU, self.on_delete_dataSeries, id=self.delete_dataSeries.GetId())        self.Bind(wx.EVT_MENU, self.on_export_dataFrame_as_csv, id=self.export_as_csv.GetId())        self.Bind(wx.EVT_MENU, self.on_export_dataFrame_as_h5, id=self.export_as_HDF5.GetId())        self.Bind(wx.EVT_MENU, self.on_pickle_dataFrame, id=self.pickle_dataFrame.GetId())        self.Bind(wx.EVT_MENU, self.on_curve_fitting, id=self.curve_fitting_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_line, id=self.quick_line_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly2, id=self.quick_poly_2.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly3, id=self.quick_poly_3.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly4, id=self.quick_poly_4.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly5, id=self.quick_poly_5.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly6, id=self.quick_poly_6.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly7, id=self.quick_poly_7.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_poly8, id=self.quick_poly_8.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_gaussian, id=self.quick_gaussian_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_lorentzen, id=self.quick_lorentzen.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_exponential, id=self.quick_exponential_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_sinusoidal, id=self.quick_sinusoidal_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_sigmoidal, id=self.quick_sigmoidal_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_power, id=self.quick_power_option.GetId())        self.Bind(wx.EVT_MENU, self.on_quickfit_lognormal, id=self.quick_lognormal_option.GetId())        self.Bind(wx.EVT_MENU, self.on_fit_between_points, id=self.fit_between_points_toggle.GetId())        self.Bind(wx.EVT_MENU, self.on_statistics_1D, id=self.statistics_1D_option.GetId())        self.Bind(wx.EVT_MENU, self.on_histogram, id=self.histogram_option.GetId())        self.Bind(wx.EVT_MENU, self.on_check_data_quality, id=self.check_data_quality.GetId())        self.Bind(wx.EVT_MENU, self.on_create_new_2D_plot, id=self.create_new_2D_plot_option.GetId())        self.Bind(wx.EVT_MENU, self.on_create_new_3D_plot, id=self.create_new_3D_plot_option.GetId())        self.Bind(wx.EVT_MENU, self.on_export_graphic, id=self.export_graphic.GetId())        self.Bind(wx.EVT_MENU, self.on_create_table, id=self.create_table.GetId())        self.Bind(wx.EVT_MENU, self.on_append_dataSeries_to_table, id=self.append_series_to_table.GetId())        self.Bind(wx.EVT_MENU, self.on_delete_dataSeries_from_table, id=self.delete_data_series.GetId())        self.Bind(wx.EVT_MENU, self.on_export_table, id=self.export_table.GetId())    def __del__(self):        pass    # Virtual event handlers, overide them in your derived class    def on_new_project(self, event):        pass    def on_open_project(self, event):        pass    def on_save_project(self, event):        pass    def on_save_as_project(self, event):        pass    def on_load_csv(self, event):        pass    def on_load_txt(self, event):        pass    def on_load_h5(self, event):        pass    def on_load_dataFrame(self, event):        pass    def on_browse_dataFrames(self, event):        pass    def on_change_dataSeries_type(self, event):        pass    def on_rename_dataSeries(self, event):        pass    def on_delete_dataSeries(self, event):        pass    def on_export_dataFrame_as_csv(self, event):        pass    def on_export_dataFrame_as_h5(self, event):        pass    def on_pickle_dataFrame(self, event):        pass    def on_curve_fitting(self, event):        pass    def on_quickfit_line(self, event):        pass    def on_quickfit_poly2(self, event):        pass    def on_quickfit_poly3(self, event):        pass    def on_quickfit_poly4(self, event):        pass    def on_quickfit_poly5(self, event):        pass    def on_quickfit_poly6(self, event):        pass    def on_quickfit_poly7(self, event):        pass    def on_quickfit_poly8(self, event):        pass    def on_quickfit_gaussian(self, event):        pass    def on_quickfit_lorentzen(self, event):        pass    def on_quickfit_exponential(self, event):        pass    def on_quickfit_sinusoidal(self, event):        pass    def on_quickfit_sigmoidal(self, event):        pass    def on_quickfit_power(self, event):        pass    def on_quickfit_lognormal(self, event):        pass    def on_fit_between_points(self, event):        pass    def on_statistics_1D(self, event):        pass    def on_histogram(self, event):        pass    def on_check_data_quality(self, event):        pass    def on_create_new_2D_plot(self, event):        pass    def on_create_new_3D_plot(self, event):        pass    def on_export_graphic(self, event):        pass    def on_create_table(self, event):        pass    def on_append_dataSeries_to_table(self, event):        pass    def on_delete_dataSeries_from_table(self, event):        pass    def on_export_table(self, event):        pass